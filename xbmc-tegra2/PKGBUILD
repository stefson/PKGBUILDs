# Maintainer: Fly-away <flyaaway@gmail.com>

_prefix=/usr

pkgname=xbmc-tegra2
pkgver=11.0
pkgrel=4
pkgdesc="A software media player and entertainment hub for digital media builded with gles and tegra2 support"
arch=('i686' 'x86_64' 'armv7h')
url="http://xbmc.org"
license=('GPL' 'custom')
replaces=('xbmc')
depends=('nvidia-tegra' 'lsb-release' 'libpulse' 'hicolor-icon-theme' 'fribidi' 'lzo2' 'smbclient' 'libtiff' 'libva' 'libpng' 'libcdio' 'yajl' 'libmysqlclient' 'libjpeg-turbo' 'libsamplerate' 'glew' 'libssh' 'libmicrohttpd' 'libxrandr' 'sdl_mixer' 'sdl_image' 'python2' 'libass' 'libmpeg2' 'libmad' 'libmodplug' 'jasper' 'rtmpdump' 'unzip' 'mesa-demos' 'xorg-xdpyinfo' 'libbluray' 'libnfs' 'afpfs-ng' 'libshairport' 'avahi' 'bluez')
makedepends=('boost' 'cmake' 'gperf' 'nasm' 'libxinerama' 'zip' 'libegl' 'libgles' 'libcec' 'udisks' 'upower' 'bluez' 'libomxil-bellagio')
optdepends=(
  'libcec: support for Pulse-Eight USB-CEC adapter'
  'vdpau-video: accelerated video playback for nvidia cards'
  'xvba-video: accelerated video playback for amd cards'
  'pulseaudio: pulseaudio support'
  'lirc: remote controller support'
  'udisks: automount external drives'
  'upower: used to trigger suspend functionality'
  'unrar: access compressed files without unpacking them'
)
install="${pkgname}.install"
source=("http://mirrors.xbmc.org/releases/source/xbmc-$pkgver.tar.gz"
        'tegra2-hardfp.patch'
        'define_have_libopenmax.patch' 
        'openmax_version_numbers.patch'
        'xbmc-11.0-FEH-py.patch'
        'math-asm.patch')

sha256sums=('1fe5d310c16138f26e2b13bc545604e95f48ace6c8636f23e77da402cd7b0b19'
            'd1f9e919e1272044a1e6768024e3a53a51af1c6965d1d0e2e6f1bc5a71fe781a'
            'a3c4542be01cab8ab8227c350467d037e0e30cc55b3db62c04730090fa511fa0'
            '093747d9650e6b246eeca4158c8b116c1177d4d924000c2a730990266e83ca32'
            '264fa19e36ce3a594fea91ac65558477ca69177d397208182cd6abe66d050bbf'
            '4bbf7ff14c6a16e51a76292acb15fc17d0fb89b8f80b6f4c2eb1619b0d75fc82')

build() {
  cd "${srcdir}/xbmc-$pkgver"

  for p in ../*.patch
  do
    patch -p1 -i ${p}
  done

  # Bootstrapping XBMC
  ./bootstrap

  # Configuring XBMC
  export PYTHON_VERSION=2  # external python v2
  ./configure --prefix=$_prefix --exec-prefix=$_prefix \
     --with-cpu=cortex-a9 \
     --enable-gles \
     --enable-tegra \
     --enable-openmax \
     --disable-pulse \
     --disable-vdpau \
     --disable-vaapi \
     --disable-joystick \
     --disable-optical-drive \
     --disable-dvdcss \
     --disable-hal \
     --disable-avahi \
     --disable-libbluray \
     --disable-airplay \
     --disable-airtunes \
     --disable-debug \
     OPENMAX_LIBS="-lnvomx"
  # Now (finally) build
  make
  cd tools/TexturePacker/
  make
}

package() {
  cd "${srcdir}/xbmc-$pkgver"
  # Running make install
  make DESTDIR="${pkgdir}" install

  # run feh with python2
  sed -i -e 's/python/python2/g' ${pkgdir}${_prefix}/bin/xbmc

  # lsb_release fix
  #sed -i -e 's/which lsb_release &> \/dev\/null/\[ -f \/etc\/arch-release ]/g' "${pkgdir}${_prefix}/bin/xbmc"
  #sed -i -e "s/lsb_release -a 2> \/dev\/null | sed -e 's\/\^\/    \/'/cat \/etc\/arch-release/g" "${pkgdir}${_prefix}/bin/xbmc"

  # Tools
  install -D -m 0755 "${srcdir}/xbmc-$pkgver/xbmc-xrandr" "${pkgdir}${_prefix}/share/xbmc/xbmc-xrandr"
  install -D -m 0755 "${srcdir}/xbmc-$pkgver/tools/TexturePacker/TexturePacker" "${pkgdir}${_prefix}/share/xbmc/"

  # Licenses
  install -d -m 0755 "${pkgdir}${_prefix}/share/licenses/${pkgname}"
  for licensef in LICENSE.GPL copying.txt; do
    mv "${pkgdir}${_prefix}/share/doc/xbmc/${licensef}" "${pkgdir}${_prefix}/share/licenses/${pkgname}"
  done
}
# vim:set ts=2 sw=2 et:
